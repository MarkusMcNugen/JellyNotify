{#
  Jellynouncer New Item Discord Embed Template

  This template generates Discord embed notifications for new media items added to Jellyfin.
  Supports different media types (Episodes, Series, Movies, Seasons) with appropriate formatting,
  thumbnails, and metadata display.
#}
{
  "embeds": [
    {
      {#
        Dynamic Title Generation

        Creates context-appropriate titles with emojis based on the media type.
        Episodes, Series, Movies, Seasons, Music content, and others get specific titles.
      #}
      "title": "{% if item.item_type == 'Episode' -%}
        üì∫ New Episode Added
      {%- elif item.item_type == 'Series' -%}
        üì∫ New Series Added
      {%- elif item.item_type == 'Movie' -%}
        üé¨ New Movie Added
      {%- elif item.item_type == 'Season' -%}
        üì∫ New Season Added
      {%- elif item.item_type == 'Audio' -%}
        üéµ New Song Added
      {%- elif item.item_type == 'MusicAlbum' -%}
        üíø New Album Added
      {%- elif item.item_type == 'MusicArtist' -%}
        üé§ New Artist Added
      {%- else -%}
        üìÅ New {{ item.item_type }} Added
      {%- endif %}",

      {#
        Context-Aware Description

        Formats descriptions differently based on media type:
        - Episodes: Show series name, season/episode numbers, and episode title
        - Music: Show song name with artists and album information
        - Albums: Show album name with album artist
        - Artists: Show artist name
        - Series/Movies: Show title with year if available
        - Includes fallback values for missing data
      #}
      "description": "{% if item.item_type == 'Episode' -%}
        **{{ item.series_name | default('Unknown Series') }}**
        S{{ '%02d' | format(item.season_number | default(0)) }}E{{ '%02d' | format(item.episode_number | default(0)) }}
        {{ item.name | default('Unknown Episode') }}
      {%- elif item.item_type == 'Audio' -%}
        **{{ item.name | default('Unknown Song') }}**
        {%- if item.artists is defined and item.artists and item.artists | length > 0 %}
          by {{ item.artists | join(', ') }}
        {%- elif item.album_artist is defined and item.album_artist %}
          by {{ item.album_artist }}
        {%- endif -%}
        {%- if item.album is defined and item.album %}
          from **{{ item.album }}**
        {%- endif -%}
      {%- elif item.item_type == 'MusicAlbum' -%}
        **{{ item.name | default('Unknown Album') }}**
        {%- if item.album_artist is defined and item.album_artist %}
          by {{ item.album_artist }}
        {%- elif item.artists is defined and item.artists and item.artists | length > 0 %}
          by {{ item.artists | join(', ') }}
        {%- endif -%}
      {%- elif item.item_type == 'MusicArtist' -%}
        **{{ item.name | default('Unknown Artist') }}**
      {%- elif item.item_type == 'Series' -%}
        **{{ item.name | default('Unknown Series') }}**
        {%- if item.year %} ({{ item.year }}){% endif -%}
      {%- else -%}
        **{{ item.name | default('Unknown Title') }}**
        {%- if item.year %} ({{ item.year }}){% endif -%}
      {%- endif %}",

      {#
        Embed Color

        Uses the color value passed from the application, with green (65280) as fallback
      #}
      "color": {{ color | default(65280) }},

      {#
        Dynamic Fields System

        Uses field counting system to ensure Discord's 25-field limit isn't exceeded.
        Fields are conditionally added based on available data and field count.
        Inline fields are used for compact technical specifications.
      #}
      "fields": [
        {%- set field_count = 0 -%}
        {%- set has_fields = false -%}

        {#
          Video Quality Field

          Displays video resolution (e.g., "1080p") with HDR status if available.
          Inline field for compact display alongside other technical specs.
          Not applicable to music content.
        #}
        {%- if item.video_height is defined and item.video_height and item.item_type not in ['Audio', 'MusicAlbum', 'MusicArtist'] -%}
          {%- if has_fields %},{% endif -%}
          {%- set has_fields = true -%}
        {
          "name": "üìê Quality",
          "value": "{{ item.video_height }}p
            {%- if item.video_range is defined and item.video_range and item.video_range != 'SDR' %} {{ item.video_range }}{% endif -%}",
          "inline": true
        }
        {%- set field_count = field_count + 1 -%}
        {%- endif -%}

        {#
          Video Codec Field

          Shows video codec (e.g., "H264", "HEVC") with profile if available.
          Helps users understand the technical quality and compatibility.
          Not applicable to music content.
        #}
        {%- if item.video_codec is defined and item.video_codec and field_count < 9 and item.item_type not in ['Audio', 'MusicAlbum', 'MusicArtist'] -%}
          {%- if has_fields %},{% endif -%}
          {%- set has_fields = true -%}
        {
          "name": "üéûÔ∏è Video",
          "value": "{{ item.video_codec | upper }}
            {%- if item.video_profile is defined and item.video_profile %} {{ item.video_profile }}{% endif -%}",
          "inline": true
        }
        {%- set field_count = field_count + 1 -%}
        {%- endif -%}

        {#
          Audio Codec Field

          Displays audio codec and channel configuration (e.g., "AC3 5.1", "AAC 2.0").
          Uses logic to format channel count properly for surround sound.
          For music content, shows detailed audio specs including bitrate and sample rate.
        #}
        {%- if item.audio_codec is defined and item.audio_codec and field_count < 9 -%}
          {%- if has_fields %},{% endif -%}
          {%- set has_fields = true -%}
        {
          "name": "üîä Audio",
          "value": "{{ item.audio_codec | upper }}
            {%- if item.audio_channels is defined and item.audio_channels %} {{ item.audio_channels }}.
              {%- if item.audio_channels > 2 %}1{% else %}0{% endif -%}
            {%- endif -%}
            {%- if item.item_type in ['Audio', 'MusicAlbum', 'MusicArtist'] -%}
              {%- if item.audio_bitrate is defined and item.audio_bitrate %} ‚Ä¢ {{ (item.audio_bitrate / 1000) | int }} kbps{% endif -%}
              {%- if item.audio_samplerate is defined and item.audio_samplerate %} ‚Ä¢ {{ (item.audio_samplerate / 1000) | round(1) }} kHz{% endif -%}
            {%- endif -%}",
          "inline": true
        }
        {%- set field_count = field_count + 1 -%}
        {%- endif -%}

        {#
          Runtime/Duration Field

          Converts Jellyfin's tick-based runtime to human-readable format.
          For music: Shows duration in minutes and seconds.
          For video: Shows duration in minutes.
          Inline field for quick reference alongside other metadata.
        #}
        {%- if item.runtime_ticks is defined and item.runtime_ticks and field_count < 9 -%}
          {%- if has_fields %},{% endif -%}
          {%- set has_fields = true -%}
        {
          "name": "‚è±Ô∏è {% if item.item_type in ['Audio', 'MusicAlbum', 'MusicArtist'] %}Duration{% else %}Runtime{% endif %}",
          "value": "{% if item.item_type in ['Audio', 'MusicAlbum', 'MusicArtist'] -%}
            {%- set total_seconds = (item.runtime_ticks / 10000000) | int -%}
            {%- set minutes = (total_seconds / 60) | int -%}
            {%- set seconds = total_seconds % 60 -%}
            {{ minutes }}:{{ '%02d' | format(seconds) }}
          {%- else -%}
            {{ (item.runtime_ticks // 600000000) }}m
          {%- endif %}",
          "inline": true
        }
        {%- set field_count = field_count + 1 -%}
        {%- endif -%}

        {#
          Content Rating Field

          Shows official content rating (e.g., "TV-14", "R", "PG-13").
          Uses shield emoji to clearly indicate this is rating/certification info.
          Positioned between runtime and release date for logical flow.
        #}
        {%- if item.official_rating is defined and item.official_rating and field_count < 9 -%}
          {%- if has_fields %},{% endif -%}
          {%- set has_fields = true -%}
        {
          "name": "üõ°Ô∏è Content Rating",
          "value": "{{ item.official_rating }}",
          "inline": true
        }
        {%- set field_count = field_count + 1 -%}
        {%- endif -%}

        {#
          Air Date / Release Date Field

          Context-aware labeling: "Air Date" for episodes, "Release" for movies/series.
          Shows premiere/release date in YYYY-MM-DD format for consistency.
        #}
        {%- if item.premiere_date is defined and item.premiere_date and field_count < 9 -%}
          {%- if has_fields %},{% endif -%}
          {%- set has_fields = true -%}
        {
          "name": "üìÖ {% if item.item_type == 'Episode' %}Air Date{% else %}Release{% endif %}",
          "value": "{{ item.premiere_date[:10] }}",
          "inline": true
        }
        {%- set field_count = field_count + 1 -%}
        {%- endif -%}

        {#
          Genres Field

          Non-inline field for better readability of genre lists.
          Shows up to 4 genres with "+X more" indicator for additional genres.
          Placed last among metadata fields for visual balance.
        #}
        {%- if item.genres is defined and item.genres and item.genres | length > 0 and field_count < 9 -%}
          {%- if has_fields %},{% endif -%}
          {%- set has_fields = true -%}
        {
          "name": "üé≠ Genres",
          "value": "{{ item.genres[:4] | join(', ') }}
            {%- if item.genres | length > 4 %} +{{ item.genres | length - 4 }} more{% endif -%}",
          "inline": false
        }
        {%- set field_count = field_count + 1 -%}
        {%- endif -%}

        {#
          Music-Specific Information

          For Music Albums and Artists, show additional metadata that doesn't fit in the description.
          This provides detailed music-specific information in a dedicated field.
        #}
        {%- if item.item_type in ['MusicAlbum', 'MusicArtist'] and field_count < 9 -%}
          {%- set music_info_parts = [] -%}
          {%- if item.item_type == 'MusicAlbum' and item.artists is defined and item.artists and item.artists | length > 0 -%}
            {%- set _ = music_info_parts.append('**Artists:** ' + item.artists | join(', ')) -%}
          {%- endif -%}
          {%- if item.year is defined and item.year -%}
            {%- set _ = music_info_parts.append('**Year:** ' + item.year | string) -%}
          {%- endif -%}
          {%- if music_info_parts | length > 0 -%}
            {%- if has_fields %},{% endif -%}
            {%- set has_fields = true -%}
        {
          "name": "üéµ {% if item.item_type == 'MusicAlbum' %}Album{% else %}Artist{% endif %} Info",
          "value": "{{ music_info_parts | join('\n') }}",
          "inline": false
        }
          {%- set field_count = field_count + 1 -%}
          {%- endif -%}
        {%- endif -%}
      ],

      {#
        Main Image Display

        Uses the main image field for prominent poster/artwork display below description.
        Shows movie posters, album covers, series artwork, etc.
        Larger than thumbnail for better visual impact.

        Image Priority:
        - Movies: Movie poster
        - Music: Album/Artist artwork
        - Series: Series poster
        - Episodes: Episode or series artwork
        - Other: Primary artwork when available
      #}
      "image": {
        "url": "{% if item.item_type == 'Episode' and item.item_id is defined -%}
          {{ jellyfin_url }}/Items/{{ item.item_id }}/Images/Primary?api_key={{ api_key }}&maxHeight=400&maxWidth=300
        {%- elif item.item_type == 'Episode' and item.series_id is defined -%}
          {{ jellyfin_url }}/Items/{{ item.series_id }}/Images/Primary?api_key={{ api_key }}&maxHeight=400&maxWidth=300
        {%- elif item.item_type == 'Movie' and item.item_id is defined -%}
          {{ jellyfin_url }}/Items/{{ item.item_id }}/Images/Primary?api_key={{ api_key }}&maxHeight=400&maxWidth=300
        {%- elif item.item_type in ['Audio', 'MusicAlbum', 'MusicArtist'] and item.item_id is defined -%}
          {{ jellyfin_url }}/Items/{{ item.item_id }}/Images/Primary?api_key={{ api_key }}&maxHeight=400&maxWidth=300
        {%- elif item.item_id is defined -%}
          {{ jellyfin_url }}/Items/{{ item.item_id }}/Images/Primary?api_key={{ api_key }}&maxHeight=400&maxWidth=300
        {%- else -%}
          {{ jellyfin_url }}/web/favicon.ico
        {%- endif %}"
      },

      {#
        Thumbnail for Logos Only

        Small thumbnail in top-right corner reserved for logos and branding.
        Shows series logos for episodes, studio logos, or other branding elements.

        Logo Priority:
        - Episodes: Series logo (if available)
        - Other content: Studio logo or branding (when implemented)
        - Fallback: No thumbnail if no logo available
      #}
      {% if item.item_type == 'Episode' and item.series_id is defined and item.series_id %},
      "thumbnail": {
        "url": "{{ jellyfin_url }}/Items/{{ item.series_id }}/Images/Logo?api_key={{ api_key }}&maxHeight=64&maxWidth=200"
      }{% endif %},

      {#
        Footer Information

        Shows when the item was added to Jellyfin and server name.
        Uses Jellyfin favicon as footer icon for consistent branding.
        Fallback to timestamp if date_created is unavailable.
      #}
      "footer": {
        "text": "Added {{ item.date_created[:10] if item.date_created else timestamp[:10] }} ‚Ä¢ {{ item.server_name or 'Jellyfin' }}",
        "icon_url": "{{ jellyfin_url }}/web/favicon.png"
      },

      {#
        Timestamp and URL

        ISO timestamp for Discord's "time ago" formatting.
        Clickable embed that links directly to the item in Jellyfin web interface.
      #}
      "timestamp": "{{ timestamp }}",
      "url": "{{ jellyfin_url }}/web/index.html#!/details?id={{ item.item_id }}"
    }
  ]
}