{#
  Jellynouncer New Item Discord Embed Template - Desktop Optimized

  This template generates Discord embed notifications for new media items added to Jellyfin.
  Optimized for DESKTOP viewing with maximum horizontal layout using inline fields.
  Supports different media types (Episodes, Series, Movies, Seasons) with appropriate formatting.
#}
{
  "embeds": [
    {
      {#
        Dynamic Title Generation

        Creates context-appropriate titles with emojis based on the media type.
        Episodes, Series, Movies, Seasons, Music content, and others get specific titles.
      #}
      "title": "{% if item.item_type == 'Episode' -%}
        üì∫ New Episode Added
      {%- elif item.item_type == 'Series' -%}
        üì∫ New Series Added
      {%- elif item.item_type == 'Movie' -%}
        üé¨ New Movie Added
      {%- elif item.item_type == 'Season' -%}
        üì∫ New Season Added
      {%- elif item.item_type == 'Audio' -%}
        üéµ New Song Added
      {%- elif item.item_type == 'MusicAlbum' -%}
        üíø New Album Added
      {%- elif item.item_type == 'MusicArtist' -%}
        üé§ New Artist Added
      {%- else -%}
        üìÅ New {{ item.item_type }} Added
      {%- endif %}",

      {#
        Enhanced Description with Plot/Overview

        Combines basic info with plot summary for comprehensive context.
        Different formatting based on media type with overview included directly.
      #}
      "description": "{% if item.item_type == 'Episode' -%}
        **{{ item.series_name | default('Unknown Series') }}**
        S{{ '%02d' | format(item.season_number | default(0)) }}E{{ '%02d' | format(item.episode_number | default(0)) }}
        {{ item.name | default('Unknown Episode') }}
        {%- if item.overview and item.overview | length > 0 %}\n\n{{ (item.overview[:250] + '...') if item.overview | length > 250 else item.overview }}{% endif -%}
      {%- elif item.item_type == 'Audio' -%}
        **{{ item.name | default('Unknown Song') }}**
        {%- if item.artists is defined and item.artists and item.artists | length > 0 %}
          by {{ item.artists | join(', ') }}
        {%- elif item.album_artist is defined and item.album_artist %}
          by {{ item.album_artist }}
        {%- endif -%}
        {%- if item.album is defined and item.album %}
          from **{{ item.album }}**
        {%- endif -%}
      {%- elif item.item_type == 'MusicAlbum' -%}
        **{{ item.name | default('Unknown Album') }}**
        {%- if item.album_artist is defined and item.album_artist %}
          by {{ item.album_artist }}
        {%- elif item.artists is defined and item.artists and item.artists | length > 0 %}
          by {{ item.artists | join(', ') }}
        {%- endif -%}
      {%- elif item.item_type == 'MusicArtist' -%}
        **{{ item.name | default('Unknown Artist') }}**
      {%- elif item.item_type == 'Series' -%}
        **{{ item.name | default('Unknown Series') }}**
        {%- if item.year %} ({{ item.year }}){% endif -%}
        {%- if item.overview and item.overview | length > 0 %}\n\n{{ (item.overview[:250] + '...') if item.overview | length > 250 else item.overview }}{% endif -%}
      {%- else -%}
        **{{ item.name | default('Unknown Title') }}**
        {%- if item.year %} ({{ item.year }}){% endif -%}
        {%- if item.overview and item.overview | length > 0 %}\n\n{{ (item.overview[:250] + '...') if item.overview | length > 250 else item.overview }}{% endif -%}
      {%- endif %}",

      {#
        Embed Color

        Uses the color value passed from the application, with green (65280) as fallback
      #}
      "color": {{ color | default(65280) }},

      {#
        Desktop-Optimized Fields System

        MAXIMIZES HORIZONTAL LAYOUT for desktop viewing:
        - ALL fields are inline=true for 3-column desktop layout
        - Strategic field grouping to ensure clean rows
        - Prioritizes technical specs in compact horizontal rows
        - Uses intelligent spacers to control row breaks
      #}
      "fields": [
        {%- set fields_added = [] -%}

        {#
          ROW 1: Core Technical Specifications (Video Quality, Video Codec, Audio)

          First priority row with most important technical details.
          All inline=true to create a clean 3-column row on desktop.
        #}
        {%- if item.video_height is defined and item.video_height and item.item_type not in ['Audio', 'MusicAlbum', 'MusicArtist'] -%}
          {%- if fields_added | length > 0 %},{% endif -%}
        {
          "name": "üìê Quality",
          "value": "{{ item.video_height }}p{% if item.video_range is defined and item.video_range and item.video_range != 'SDR' %} {{ item.video_range }}{% endif %}",
          "inline": true
        }
          {%- set _ = fields_added.append('quality') -%}
        {%- endif -%}

        {%- if item.video_codec is defined and item.video_codec and item.item_type not in ['Audio', 'MusicAlbum', 'MusicArtist'] -%}
          {%- if fields_added | length > 0 %},{% endif -%}
        {
          "name": "üéûÔ∏è Video",
          "value": "{{ item.video_codec | upper }}{% if item.video_profile is defined and item.video_profile %} {{ item.video_profile }}{% endif %}",
          "inline": true
        }
          {%- set _ = fields_added.append('video') -%}
        {%- endif -%}

        {%- if item.audio_codec is defined and item.audio_codec -%}
          {%- if fields_added | length > 0 %},{% endif -%}
        {
          "name": "üîä Audio",
          "value": "{{ item.audio_codec | upper }}{% if item.audio_channels is defined and item.audio_channels %} {{ item.audio_channels }}.{% if item.audio_channels > 2 %}1{% else %}0{% endif %}{% endif %}{% if item.audio_language is defined and item.audio_language and item.audio_language != 'und' %} ({{ item.audio_language | upper }}){% endif %}",
          "inline": true
        }
          {%- set _ = fields_added.append('audio') -%}
        {%- endif -%}

        {#
          ROW 2: File Information (Duration, File Size, Content Rating)

          Second priority row with file and content metadata.
          All inline=true for clean 3-column desktop display.
        #}
        {%- if item.runtime_ticks is defined and item.runtime_ticks and fields_added | length < 9 -%}
          {%- if fields_added | length > 0 %},{% endif -%}
        {
          "name": "‚è±Ô∏è Duration",
          "value": "{% set hours = (item.runtime_ticks // 36000000000) %}{% set minutes = ((item.runtime_ticks % 36000000000) // 600000000) %}{% if hours > 0 %}{{ hours }}h {% endif %}{{ minutes }}m",
          "inline": true
        }
          {%- set _ = fields_added.append('duration') -%}
        {%- endif -%}

        {%- if item.file_size is defined and item.file_size and fields_added | length < 9 -%}
          {%- if fields_added | length > 0 %},{% endif -%}
        {
          "name": "üíæ Size",
          "value": "{% if item.file_size > 1073741824 %}{{ '%.2f' | format(item.file_size / 1073741824) }} GB{% else %}{{ '%.1f' | format(item.file_size / 1048576) }} MB{% endif %}",
          "inline": true
        }
          {%- set _ = fields_added.append('filesize') -%}
        {%- endif -%}

        {%- if item.official_rating is defined and item.official_rating and fields_added | length < 9 -%}
          {%- if fields_added | length > 0 %},{% endif -%}
        {
          "name": "üõ°Ô∏è Rating",
          "value": "{{ item.official_rating }}",
          "inline": true
        }
          {%- set _ = fields_added.append('rating') -%}
        {%- endif -%}

        {#
          ROW 3: Release/Content Information (Release Date, Year, Genres)

          Third priority row with release metadata and genres.
          Genres field uses compact display with "+X more" format.
        #}
        {%- if item.premiere_date is defined and item.premiere_date and fields_added | length < 12 -%}
          {%- if fields_added | length > 0 %},{% endif -%}
        {
          "name": "üìÖ {% if item.item_type == 'Episode' %}Air Date{% else %}Release{% endif %}",
          "value": "{{ item.premiere_date[:10] }}",
          "inline": true
        }
          {%- set _ = fields_added.append('release') -%}
        {%- endif -%}

        {%- if item.year is defined and item.year and item.item_type not in ['Episode', 'Audio'] and fields_added | length < 12 -%}
          {%- if fields_added | length > 0 %},{% endif -%}
        {
          "name": "üìÖ Year",
          "value": "{{ item.year }}",
          "inline": true
        }
          {%- set _ = fields_added.append('year') -%}
        {%- endif -%}

        {%- if item.genres is defined and item.genres and item.genres | length > 0 and fields_added | length < 12 -%}
          {%- if fields_added | length > 0 %},{% endif -%}
        {
          "name": "üé≠ Genres",
          "value": "{{ item.genres[:3] | join(', ') }}{% if item.genres | length > 3 %} +{{ item.genres | length - 3 }}{% endif %}",
          "inline": true
        }
          {%- set _ = fields_added.append('genres') -%}
        {%- endif -%}

        {#
          SPACER LOGIC: Force new row for special content types

          Uses invisible spacers to force next fields onto new row when needed.
          Ensures music content gets its own dedicated row for better organization.
        #}
        {%- if item.item_type in ['MusicAlbum', 'MusicArtist'] and fields_added | length % 3 != 0 -%}
          {%- set spacers_needed = 3 - (fields_added | length % 3) -%}
          {%- for i in range(spacers_needed) -%}
            {%- if fields_added | length > 0 %},{% endif -%}
        {
          "name": "\u200B",
          "value": "\u200B",
          "inline": true
        }
            {%- set _ = fields_added.append('spacer_' + i|string) -%}
          {%- endfor -%}
        {%- endif -%}

        {#
          ROW 4: Music-Specific Information (Optional)

          For Music Albums and Artists, show additional metadata.
          Uses 2-column layout with spacer for visual balance.
        #}
        {%- if item.item_type in ['MusicAlbum', 'MusicArtist'] -%}
          {%- set music_info_parts = [] -%}
          {%- if item.item_type == 'MusicAlbum' and item.artists is defined and item.artists and item.artists | length > 0 -%}
            {%- set _ = music_info_parts.append('**Artists:** ' + item.artists[:3] | join(', ')) -%}
            {%- if item.artists | length > 3 -%}
              {%- set _ = music_info_parts.append(' +' + (item.artists | length - 3)|string + ' more') -%}
            {%- endif -%}
          {%- endif -%}
          {%- if item.year is defined and item.year -%}
            {%- set _ = music_info_parts.append('**Year:** ' + item.year | string) -%}
          {%- endif -%}
          {%- if music_info_parts | length > 0 -%}
            {%- if fields_added | length > 0 %},{% endif -%}
        {
          "name": "üéµ {% if item.item_type == 'MusicAlbum' %}Album{% else %}Artist{% endif %} Info",
          "value": "{{ music_info_parts | join('\n') }}",
          "inline": true
        }
            {%- set _ = fields_added.append('music_info') -%}
            {# Add spacer for visual balance #}
            {%- if fields_added | length > 0 %},{% endif -%}
        {
          "name": "\u200B",
          "value": "\u200B",
          "inline": true
        }
            {%- set _ = fields_added.append('music_spacer') -%}
          {%- endif -%}
        {%- endif -%}
	  ],
      {%- if thumbnail_url is defined and thumbnail_url %}
      {#
        Intelligent Thumbnail System

        Displays verified thumbnails when available, with proper fallback handling.
        Compatible with the ThumbnailManager's verification process.
      #}
      "thumbnail": {
        "url": "{{ thumbnail_url }}"
      },
      {%- endif %}
      {#
        Footer Information

        Shows when the item was added to Jellyfin and server name.
        Uses Jellyfin favicon as footer icon for consistent branding.
        Fallback to timestamp if date_created is unavailable.
      #}
      "footer": {
        "text": "Added {{ item.date_created[:10] if item.date_created else timestamp[:10] }} ‚Ä¢ {{ item.server_name or 'Jellyfin' }}",
        "icon_url": "{{ jellyfin_url }}/web/favicon.png"
      },
      {#
        Timestamp and URL

        ISO timestamp for Discord's "time ago" formatting.
        Clickable embed that links directly to the item in Jellyfin web interface.
      #}
      "timestamp": "{{ timestamp }}",
      "url": "{{ jellyfin_url }}/web/index.html#!/details?id={{ item.item_id }}"
    }
  ]
}