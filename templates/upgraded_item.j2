{#
  Jellynouncer Upgraded Item Discord Embed Template

  This template generates Discord embed notifications for media items that have been upgraded in Jellyfin.
  Upgrades include quality improvements (resolution, codec, audio), file replacements, and metadata updates.
  Supports different media types (Episodes, Series, Movies, Music) with appropriate formatting,
  thumbnails, and change summaries.
#}
{
  "embeds": [
    {
      {#
        Dynamic Title Generation

        Creates context-appropriate upgrade titles with emojis based on the media type.
        Shows specific upgrade type if only one change occurred.
        Episodes, Series, Movies, Music content get specific titles.
      #}
      "title": "⬆️ {% if item.item_type == 'Episode' -%}
        📺 Episode
      {%- elif item.item_type == 'Series' -%}
        📺 Series
      {%- elif item.item_type == 'Movie' -%}
        🎬 Movie
      {%- elif item.item_type == 'Season' -%}
        📺 Season
      {%- elif item.item_type == 'Audio' -%}
        🎵 Song
      {%- elif item.item_type == 'MusicAlbum' -%}
        💿 Album
      {%- elif item.item_type == 'MusicArtist' -%}
        🎤 Artist
      {%- else -%}
        📁 {{ item.item_type }}
      {%- endif %} {% if changes|length == 1 %}{{ changes[0].type|title }} {% endif %}Upgraded",

      {#
        Context-Aware Description

        Formats descriptions differently based on media type:
        - Episodes: Show series name, season/episode numbers, and episode title
        - Music: Show song name with artists and album information
        - Albums: Show album name with album artist
        - Artists: Show artist name
        - Series/Movies: Show title with year if available
        - Includes fallback values for missing data
      #}
      "description": "{% if item.item_type == 'Episode' -%}
        **{{ item.series_name | default('Unknown Series') }}**
        S{{ '%02d' | format(item.season_number | default(0)) }}E{{ '%02d' | format(item.episode_number | default(0)) }}
        {{ item.name | default('Unknown Episode') }}
      {%- elif item.item_type == 'Audio' -%}
        **{{ item.name | default('Unknown Song') }}**
        {%- if item.artists is defined and item.artists and item.artists | length > 0 %}
          by {{ item.artists | join(', ') }}
        {%- elif item.album_artist is defined and item.album_artist %}
          by {{ item.album_artist }}
        {%- endif -%}
        {%- if item.album is defined and item.album %}
          from **{{ item.album }}**
        {%- endif -%}
      {%- elif item.item_type == 'MusicAlbum' -%}
        **{{ item.name | default('Unknown Album') }}**
        {%- if item.album_artist is defined and item.album_artist %}
          by {{ item.album_artist }}
        {%- elif item.artists is defined and item.artists and item.artists | length > 0 %}
          by {{ item.artists | join(', ') }}
        {%- endif -%}
      {%- elif item.item_type == 'MusicArtist' -%}
        **{{ item.name | default('Unknown Artist') }}**
      {%- else -%}
        **{{ item.name | default('Unknown Title') }}**
        {%- if item.year %} ({{ item.year }}){% endif -%}
      {%- endif %}",

      {#
        Embed Color

        Uses the color value passed from the application based on upgrade type
      #}
      "color": {{ color }},

      {#
        Dynamic Fields System

        Uses field counting system to ensure Discord's 25-field limit isn't exceeded.
        Fields are conditionally added based on available data and field count.
        Starts with upgrade summary, then shows current technical specifications.
      #}
      "fields": [
        {%- set field_count = 0 -%}
        {%- set has_fields = false -%}

        {#
          Change Summary Fields

          Shows what was upgraded with before → after format.
          Displays up to 3 changes as individual fields for emphasis.
          Uses specific icons and formatting for different upgrade types.
        #}
        {% for change in changes[:3] %}
        {%- if has_fields %},{% endif -%}
        {%- set has_fields = true -%}
        {
          "name": "{% if change.type == 'resolution' %}📐 Resolution Upgrade{% elif change.type == 'codec' %}🎞️ Video Codec Upgrade{% elif change.type == 'audio_codec' %}🔊 Audio Codec Upgrade{% elif change.type == 'audio_channels' %}🔊 Audio Channels Upgrade{% elif change.type == 'hdr_status' %}🌈 HDR Status Upgrade{% elif change.type == 'file_size' %}💾 File Replaced{% elif change.type == 'provider_ids' %}🔗 Metadata Updated{% else %}🔄 {{ change.type|title }} Upgrade{% endif %}",
          "value": "{% if change.type == 'resolution' %}{{ change.old_value or 'Unknown' }}p → **{{ change.new_value or 'Unknown' }}p**{% elif change.type == 'codec' %}{{ change.old_value or 'Unknown' }} → **{{ change.new_value or 'Unknown' }}**{% elif change.type == 'audio_codec' %}{{ change.old_value or 'Unknown' }} → **{{ change.new_value or 'Unknown' }}**{% elif change.type == 'audio_channels' %}{{ change.old_value or 0 }} ch → **{{ change.new_value or 0 }} ch**{% elif change.type == 'hdr_status' %}{{ change.old_value or 'SDR' }} → **{{ change.new_value or 'SDR' }}**{% elif change.type == 'file_size' %}File replaced with {% if item.file_size %}{{ "%.1f"|format(item.file_size / 1073741824) }}GB{% else %}new version{% endif %}{% elif change.type == 'provider_ids' %}{{ change.description }}{% else %}{{ change.description }}{% endif %}",
          "inline": {% if loop.index <= 2 %}true{% else %}false{% endif %}
        }
        {%- set field_count = field_count + 1 -%}
        {% endfor %}

        {#
          Current Technical Specifications

          Shows current state after upgrade for context.
          Only shows if we have 2 or fewer change fields to avoid clutter.
          Inline fields for compact display of technical specs.
        #}
        {% if changes|length <= 2 %}
        {%- if field_count > 0 %},{% endif -%}
        {%- set has_fields = true -%}
        {
          "name": "📐 Current Quality",
          "value": "{% if item.video_height %}{{ item.video_height }}p{% else %}Unknown{% endif %}{% if item.video_range and item.video_range != 'SDR' %} {{ item.video_range }}{% endif %}",
          "inline": true
        }
        {%- set field_count = field_count + 1 -%}
        {% if item.video_codec %}
        ,{
          "name": "🎞️ Current Codec",
          "value": "{{ item.video_codec.upper() }}{% if item.video_profile %} ({{ item.video_profile }}){% endif %}",
          "inline": true
        }
        {%- set field_count = field_count + 1 -%}
        {% endif %}
        {% if item.audio_codec %}
        ,{
          "name": "🔊 Current Audio",
          "value": "{{ item.audio_codec.upper() }}{% if item.audio_channels %} {{ item.audio_channels }}.{% if item.audio_channels > 2 %}1{% else %}0{% endif %}{% endif %}{% if item.item_type in ['Audio', 'MusicAlbum', 'MusicArtist'] %}{% if item.audio_bitrate %} • {{ (item.audio_bitrate / 1000) | int }} kbps{% endif %}{% if item.audio_samplerate %} • {{ (item.audio_samplerate / 1000) | round(1) }} kHz{% endif %}{% endif %}",
          "inline": true
        }
        {%- set field_count = field_count + 1 -%}
        {% endif %}
        {% endif %}

        {#
          Runtime/Duration Field

          Shows current runtime after upgrade.
          Different formatting for music vs video content.
        #}
        {% if item.runtime_ticks and field_count < 9 %}
        ,{
          "name": "⏱️ {% if item.item_type in ['Audio', 'MusicAlbum', 'MusicArtist'] %}Duration{% else %}Runtime{% endif %}",
          "value": "{% if item.item_type in ['Audio', 'MusicAlbum', 'MusicArtist'] -%}
            {%- set total_seconds = (item.runtime_ticks / 10000000) | int -%}
            {%- set minutes = (total_seconds / 60) | int -%}
            {%- set seconds = total_seconds % 60 -%}
            {{ minutes }}:{{ '%02d' | format(seconds) }}
          {%- else -%}
            {{ (item.runtime_ticks // 600000000) }}m
          {%- endif %}",
          "inline": true
        }
        {%- set field_count = field_count + 1 -%}
        {% endif %}

        {#
          Content Rating Field

          Shows official content rating with shield emoji.
          Positioned for logical flow with other metadata.
        #}
        {% if item.official_rating and field_count < 9 %}
        ,{
          "name": "🛡️ Content Rating",
          "value": "{{ item.official_rating }}",
          "inline": true
        }
        {%- set field_count = field_count + 1 -%}
        {% endif %}

        {#
          Air Date / Release Date Field

          Context-aware labeling: "Air Date" for episodes, "Release" for movies/series.
        #}
        {% if item.premiere_date and field_count < 9 %}
        ,{
          "name": "📅 {% if item.item_type == 'Episode' %}Air Date{% else %}Release{% endif %}",
          "value": "{{ item.premiere_date[:10] }}",
          "inline": true
        }
        {%- set field_count = field_count + 1 -%}
        {% endif %}

        {#
          External Ratings

          Shows ratings from external sources like IMDB, Rotten Tomatoes, etc.
          Non-inline for better mobile display readability.
        #}
        {% if ratings and ratings|length > 0 and field_count < 9 %}
        ,{
          "name": "⭐ Ratings",
          "value": "{% for rating_key, rating_data in ratings.items() %}{% if rating_key == 'imdb' %}**IMDb:** {{ rating_data.value }}/{{ rating_data.scale }}{% elif rating_key == 'rotten_tomatoes' %}**RT:** {{ rating_data.value }}%{% elif rating_key == 'metacritic' %}**MC:** {{ rating_data.value }}/{{ rating_data.scale }}{% elif rating_key == 'tmdb' %}**TMDb:** {{ rating_data.value }}/{{ rating_data.scale }}{% if rating_data.vote_count %} ({{ rating_data.vote_count }} votes){% endif %}{% elif rating_key == 'tvdb' %}**TVDb:** {{ rating_data.value }}/{{ rating_data.scale }}{% endif %}{% if not loop.last %} • {% endif %}{% endfor %}",
          "inline": false
        }
        {%- set field_count = field_count + 1 -%}
        {% endif %}

        {#
          External Links

          Provides links to external databases and information sources.
          Non-inline for better clickability and readability.
        #}
        {% if (item.imdb_id or item.tmdb_id or item.tvdb_id) and field_count < 9 %}
        ,{
          "name": "🔗 External Links",
          "value": "{% if item.imdb_id %}[IMDb](https://www.imdb.com/title/{{ item.imdb_id }}/){% endif %}{% if item.tmdb_id %}{% if item.imdb_id %} • {% endif %}[TMDb](https://www.themoviedb.org/{% if item.item_type == 'Movie' %}movie{% elif item.item_type == 'Series' %}tv{% else %}tv{% endif %}/{{ item.tmdb_id }}){% endif %}{% if item.tvdb_id %}{% if item.imdb_id or item.tmdb_id %} • {% endif %}{% if ratings.tvdb and ratings.tvdb.proper_url %}[TVDb]({{ ratings.tvdb.proper_url }}){% elif item.item_type == 'Episode' %}[TVDb](https://thetvdb.com/episodes/{{ item.tvdb_id }}){% elif item.item_type == 'Series' %}[TVDb](https://thetvdb.com/series/{{ item.tvdb_id }}){% else %}[TVDb](https://thetvdb.com/dereferrer/series/{{ item.tvdb_id }}){% endif %}{% endif %}",
          "inline": false
        }
        {%- set field_count = field_count + 1 -%}
        {% endif %}

        {#
          Music-Specific Information

          For Music Albums and Artists, show additional metadata.
          Only displayed if we haven't exceeded field limits.
        #}
        {%- if item.item_type in ['MusicAlbum', 'MusicArtist'] and field_count < 9 -%}
          {%- set music_info_parts = [] -%}
          {%- if item.item_type == 'MusicAlbum' and item.artists is defined and item.artists and item.artists | length > 0 -%}
            {%- set _ = music_info_parts.append('**Artists:** ' + item.artists | join(', ')) -%}
          {%- endif -%}
          {%- if item.year is defined and item.year -%}
            {%- set _ = music_info_parts.append('**Year:** ' + item.year | string) -%}
          {%- endif -%}
          {%- if music_info_parts | length > 0 -%}
        ,{
          "name": "🎵 {% if item.item_type == 'MusicAlbum' %}Album{% else %}Artist{% endif %} Info",
          "value": "{{ music_info_parts | join('\n') }}",
          "inline": false
        }
          {%- set field_count = field_count + 1 -%}
          {%- endif -%}
        {%- endif -%}
      ],

      {#
        Main Image Display

        Uses the main image field for prominent poster/artwork display below description.
        Shows movie posters, album covers, series artwork, etc.
        Larger than thumbnail for better visual impact and showcases the upgraded content.

        Image Priority:
        - Movies: Movie poster
        - Music: Album/Artist artwork
        - Series: Series poster
        - Episodes: Episode or series artwork
        - Other: Primary artwork when available
      #}
      "image": {
        "url": "{% if item.item_type == 'Episode' and item.item_id is defined -%}
          {{ jellyfin_url }}/Items/{{ item.item_id }}/Images/Primary?api_key={{ api_key }}&maxHeight=400&maxWidth=300
        {%- elif item.item_type == 'Episode' and item.series_id is defined -%}
          {{ jellyfin_url }}/Items/{{ item.series_id }}/Images/Primary?api_key={{ api_key }}&maxHeight=400&maxWidth=300
        {%- elif item.item_type == 'Movie' and item.item_id is defined -%}
          {{ jellyfin_url }}/Items/{{ item.item_id }}/Images/Primary?api_key={{ api_key }}&maxHeight=400&maxWidth=300
        {%- elif item.item_type in ['Audio', 'MusicAlbum', 'MusicArtist'] and item.item_id is defined -%}
          {{ jellyfin_url }}/Items/{{ item.item_id }}/Images/Primary?api_key={{ api_key }}&maxHeight=400&maxWidth=300
        {%- elif item.item_id is defined -%}
          {{ jellyfin_url }}/Items/{{ item.item_id }}/Images/Primary?api_key={{ api_key }}&maxHeight=400&maxWidth=300
        {%- else -%}
          {{ jellyfin_url }}/web/favicon.ico
        {%- endif %}"
      },

      {#
        Thumbnail for Logos Only

        Small thumbnail in top-right corner reserved for logos and branding.
        Shows series logos for episodes, studio logos, or other branding elements.
        Helps identify the content brand while showing the upgraded artwork in main image.

        Logo Priority:
        - Episodes: Series logo (if available)
        - Other content: Studio logo or branding (when implemented)
        - Fallback: No thumbnail if no logo available
      #}
      {% if item.item_type == 'Episode' and item.series_id is defined and item.series_id %},
      "thumbnail": {
        "url": "{{ jellyfin_url }}/Items/{{ item.series_id }}/Images/Logo?api_key={{ api_key }}&maxHeight=64&maxWidth=200"
      }{% endif %},

      {#
        Footer Information

        Shows when the item was upgraded and server name.
        Uses Jellyfin favicon as footer icon for consistent branding.
        Special attribution for TheTVDB metadata when needed.
      #}
      "footer": {
        "text": "Updated in Jellyfin • {{ timestamp[:19] | replace('T', ' ') }} UTC{% if tvdb_attribution_needed %}\nMetadata provided by TheTVDB{% endif %}",
        "icon_url": "{{ jellyfin_url }}/web/favicon.png"
      },

      {#
        Timestamp

        ISO timestamp for Discord's "time ago" formatting.
      #}
      "timestamp": "{{ timestamp }}"
    }
  ]
}