{#
  Jellynouncer Grouped New Items Discord Embed Template

  This template generates Discord embed notifications for multiple new media items grouped together.
  Items are categorized by type (Movies, TV Shows, Music, Other) for organized display.
  Supports batching notifications to reduce Discord channel noise while maintaining rich information.

  Categories:
  - Movies: Films and movie content
  - TV Shows: Episodes, Series, and Seasons
  - Music: Songs (Audio), Albums (MusicAlbum), Artists (MusicArtist)
  - Other: Photos, Books, and other content types
#}
{
  "embeds": [
    {
      {#
        Title and Description

        Shows total count of items in the batch for quick reference.
        Generic description since this covers multiple categories and types.
      #}
      "title": "🔄 Jellyfin Library Updates ({{ total_items }})",
      "description": "The following items have been added or upgraded in Jellyfin:",

      {#
        Color Coding

        Uses blue color (3447003) for mixed content notifications.
        Differentiates from single-item notifications which use green.
      #}
      "color": 3447003,

      {#
        Category-Based Fields

        Each category gets its own field for organized display.
        Shows both new and upgraded items within each category.
        Limits displayed items to prevent field overflow while showing counts.
      #}
      "fields": [
        {#
          Movies Category

          Shows new and upgraded movies with titles and years.
          Limits to 3 items per section to keep field manageable.
          Uses consistent movie emoji and clear labeling.
        #}
        {% if 'movies' in categories %}
        {
          "name": "🎬 Movies",
          "value": "{% if categories.movies.new|length > 0 -%}
            **New ({{ categories.movies.new|length }})**:
            {%- for item_data in categories.movies.new[:3] -%}
              {{ item_data.item.name }}
              {%- if item_data.item.year %} ({{ item_data.item.year }}){% endif -%}
              {%- if not loop.last %}, {% endif -%}
            {%- endfor -%}
            {%- if categories.movies.new|length > 3 %}, +{{ categories.movies.new|length - 3 }} more{% endif -%}
          {%- endif -%}
          {%- if categories.movies.new|length > 0 and categories.movies.upgraded|length > 0 %}\n{% endif -%}
          {%- if categories.movies.upgraded|length > 0 -%}
            **Upgraded ({{ categories.movies.upgraded|length }})**:
            {%- for item_data in categories.movies.upgraded[:3] -%}
              {{ item_data.item.name }}
              {%- if item_data.item.year %} ({{ item_data.item.year }}){% endif -%}
              {%- if not loop.last %}, {% endif -%}
            {%- endfor -%}
            {%- if categories.movies.upgraded|length > 3 %}, +{{ categories.movies.upgraded|length - 3 }} more{% endif -%}
          {%- endif %}",
          "inline": false
        }{% if 'tv' in categories or 'music' in categories or 'other' in categories %},{% endif %}
        {% endif %}

        {#
          TV Shows Category

          Shows episodes with series names, season/episode numbers.
          Also includes series and seasons when present.
          Limits to 4 items since episode titles are shorter.
        #}
        {% if 'tv' in categories %}
        {
          "name": "📺 TV Shows",
          "value": "{% if categories.tv.new|length > 0 -%}
            **New Episodes ({{ categories.tv.new|length }})**:
            {%- for item_data in categories.tv.new[:4] -%}
              {{ item_data.item.series_name }} S{{ '%02d'|format(item_data.item.season_number or 0) }}E{{ '%02d'|format(item_data.item.episode_number or 0) }}
              {%- if not loop.last %}, {% endif -%}
            {%- endfor -%}
            {%- if categories.tv.new|length > 4 %}, +{{ categories.tv.new|length - 4 }} more{% endif -%}
          {%- endif -%}
          {%- if categories.tv.new|length > 0 and categories.tv.upgraded|length > 0 %}\n{% endif -%}
          {%- if categories.tv.upgraded|length > 0 -%}
            **Upgraded Episodes ({{ categories.tv.upgraded|length }})**:
            {%- for item_data in categories.tv.upgraded[:4] -%}
              {{ item_data.item.series_name }} S{{ '%02d'|format(item_data.item.season_number or 0) }}E{{ '%02d'|format(item_data.item.episode_number or 0) }}
              {%- if not loop.last %}, {% endif -%}
            {%- endfor -%}
            {%- if categories.tv.upgraded|length > 4 %}, +{{ categories.tv.upgraded|length - 4 }} more{% endif -%}
          {%- endif %}",
          "inline": false
        }{% if 'music' in categories or 'other' in categories %},{% endif %}
        {% endif %}

        {#
          Music Category

          Enhanced music display with artist and album information.
          Shows different content based on music type:
          - Songs (Audio): Track name with artist and album
          - Albums (MusicAlbum): Album name with artist
          - Artists (MusicArtist): Artist name

          Limits to 5 items since music titles are typically shorter.
        #}
        {% if 'music' in categories %}
        {
          "name": "🎵 Music",
          "value": "{% if categories.music.new|length > 0 -%}
            **New Content ({{ categories.music.new|length }})**:
            {%- for item_data in categories.music.new[:5] -%}
              {%- if item_data.item.item_type == 'Audio' -%}
                🎵 {{ item_data.item.name }}
                {%- if item_data.item.artists and item_data.item.artists|length > 0 %} by {{ item_data.item.artists[:2]|join(', ') }}
                  {%- if item_data.item.artists|length > 2 %}+{{ item_data.item.artists|length - 2 }}{% endif -%}
                {%- elif item_data.item.album_artist %} by {{ item_data.item.album_artist }}
                {%- endif -%}
              {%- elif item_data.item.item_type == 'MusicAlbum' -%}
                💿 {{ item_data.item.name }}
                {%- if item_data.item.album_artist %} by {{ item_data.item.album_artist }}
                {%- elif item_data.item.artists and item_data.item.artists|length > 0 %} by {{ item_data.item.artists[:2]|join(', ') }}
                  {%- if item_data.item.artists|length > 2 %}+{{ item_data.item.artists|length - 2 }}{% endif -%}
                {%- endif -%}
              {%- elif item_data.item.item_type == 'MusicArtist' -%}
                🎤 {{ item_data.item.name }}
              {%- else -%}
                {{ item_data.item.name }}
              {%- endif -%}
              {%- if not loop.last %}, {% endif -%}
            {%- endfor -%}
            {%- if categories.music.new|length > 5 %}, +{{ categories.music.new|length - 5 }} more{% endif -%}
          {%- endif -%}
          {%- if categories.music.new|length > 0 and categories.music.upgraded|length > 0 %}\n{% endif -%}
          {%- if categories.music.upgraded|length > 0 -%}
            **Upgraded Content ({{ categories.music.upgraded|length }})**:
            {%- for item_data in categories.music.upgraded[:5] -%}
              {%- if item_data.item.item_type == 'Audio' -%}
                🎵 {{ item_data.item.name }}
                {%- if item_data.item.artists and item_data.item.artists|length > 0 %} by {{ item_data.item.artists[:2]|join(', ') }}
                  {%- if item_data.item.artists|length > 2 %}+{{ item_data.item.artists|length - 2 }}{% endif -%}
                {%- elif item_data.item.album_artist %} by {{ item_data.item.album_artist }}
                {%- endif -%}
              {%- elif item_data.item.item_type == 'MusicAlbum' -%}
                💿 {{ item_data.item.name }}
                {%- if item_data.item.album_artist %} by {{ item_data.item.album_artist }}
                {%- elif item_data.item.artists and item_data.item.artists|length > 0 %} by {{ item_data.item.artists[:2]|join(', ') }}
                  {%- if item_data.item.artists|length > 2 %}+{{ item_data.item.artists|length - 2 }}{% endif -%}
                {%- endif -%}
              {%- elif item_data.item.item_type == 'MusicArtist' -%}
                🎤 {{ item_data.item.name }}
              {%- else -%}
                {{ item_data.item.name }}
              {%- endif -%}
              {%- if not loop.last %}, {% endif -%}
            {%- endfor -%}
            {%- if categories.music.upgraded|length > 5 %}, +{{ categories.music.upgraded|length - 5 }} more{% endif -%}
          {%- endif %}",
          "inline": false
        }{% if 'other' in categories %},{% endif %}
        {% endif %}

        {#
          Other Content Category

          Handles Photos, Books, and any other content types not covered above.
          Uses generic display since content types vary widely.
          Shows both new and upgraded items with simple name listing.
        #}
        {% if 'other' in categories %}
        {
          "name": "📁 Other Content",
          "value": "{% if categories.other.new|length > 0 -%}
            **New Items ({{ categories.other.new|length }})**:
            {%- for item_data in categories.other.new[:4] -%}
              {{ item_data.item.name }}
              {%- if not loop.last %}, {% endif -%}
            {%- endfor -%}
            {%- if categories.other.new|length > 4 %}, +{{ categories.other.new|length - 4 }} more{% endif -%}
          {%- endif -%}
          {%- if categories.other.new|length > 0 and categories.other.upgraded|length > 0 %}\n{% endif -%}
          {%- if categories.other.upgraded|length > 0 -%}
            **Upgraded Items ({{ categories.other.upgraded|length }})**:
            {%- for item_data in categories.other.upgraded[:4] -%}
              {{ item_data.item.name }}
              {%- if not loop.last %}, {% endif -%}
            {%- endfor -%}
            {%- if categories.other.upgraded|length > 4 %}, +{{ categories.other.upgraded|length - 4 }} more{% endif -%}
          {%- endif %}",
          "inline": false
        }
        {% endif %}
      ],

      {#
        Footer Information

        Shows when items were added and server identification.
        Uses Jellyfin favicon for consistent branding.
        Includes TheTVDB attribution when metadata sourced from there.
      #}
      "footer": {
        "text": "Jellyfin Library Updates • {{ timestamp[:19] | replace('T', ' ') }} UTC{% if tvdb_attribution_needed %}\nMetadata provided by TheTVDB{% endif %}",
        "icon_url": "{{ jellyfin_url }}/web/favicon.png"
      },

      {#
        Timestamp

        ISO timestamp for Discord's "time ago" formatting.
        Represents when the batch notification was generated.
      #}
      "timestamp": "{{ timestamp }}"
    }
  ]
}